<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8"/><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(3),u=e(4),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}catch(e){throw f.emit("fn-err",[arguments,this,e],t),e}finally{f.emit("fn-end",[c.now()],t)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){if(!o)return!1;if(e!==o)return!1;if(!n)return!0;if(!i)return!1;for(var t=i.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==t[a])return!1;return!0}var o=null,i=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var u=navigator.userAgent,f=u.match(a);f&&u.indexOf("Chrome")===-1&&u.indexOf("Chromium")===-1&&(o="Safari",i=f[1])}n.exports={agent:o,version:i,match:r}},{}],3:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],4:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],5:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=v(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){h[e]=v(e).concat(n)}function m(e,n){var t=h[e];if(t)for(var r=0;r<t.length;r++)t[r]===n&&t.splice(r,1)}function v(e){return h[e]||[]}function g(e){return p[e]=p[e]||o(t)}function w(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var h={},y={},b={on:l,addEventListener:l,removeEventListener:m,emit:t,get:g,listeners:v,context:n,buffer:w,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(3),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!E++){var e=x.info=NREUM.info,n=l.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+x.offset],null,"api");var t=l.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===l.readyState&&i()}function i(){f("mark",["domContent",a()+x.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-x.offset}var u=(new Date).getTime(),f=e("handle"),c=e(3),s=e("ee"),p=e(2),d=window,l=d.document,m="addEventListener",v="attachEvent",g=d.XMLHttpRequest,w=g&&g.prototype;NREUM.o={ST:setTimeout,SI:d.setImmediate,CT:clearTimeout,XHR:g,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var h=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1099.min.js"},b=g&&w&&w[m]&&!/CriOS/.test(navigator.userAgent),x=n.exports={offset:u,now:a,origin:h,features:{},xhrWrappable:b,userAgent:p};e(1),l[m]?(l[m]("DOMContentLoaded",i,!1),d[m]("load",r,!1)):(l[v]("onreadystatechange",o),d[v]("onload",r)),f("mark",["firstbyte",u],null,"api");var E=0,O=e(5)},{}]},{},["loader"]);</script>
<title>Security/CSP/Specification - MozillaWiki</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Security/CSP/Specification","wgTitle":"Security/CSP/Specification","wgCurRevisionId":476897,"wgRevisionId":476897,"wgArticleId":34077,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Security/CSP/Specification","wgRelevantArticleId":34077,"wgRequestId":"81a2a7b19471efb63a86bf7c","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"srfFilteredConfig":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":true,"publish":false},"wgPageFormsAutocompleteValues":[],"wgPageFormsAutocompleteOnAllChars":false,"wgPageFormsFieldProperties":[],"wgPageFormsCargoFields":[],"wgPageFormsDependentFields":[],"wgPageFormsGridValues":[],"wgPageFormsGridParams":[],"wgPageFormsShowOnSelect":[],"wgPageFormsScriptPath":"/extensions/PageForms","edgValues":null,"wgPageFormsEDSettings":null,"wgPreferredVariant":"en"});mw.loader.implement("user.options",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["ext.smw.style","mediawiki.page.startup","ext.Bugzilla","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/load.php?debug=false&amp;lang=en&amp;modules=ext.Sandstone.main%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector"/>
<link rel="stylesheet" href="/load.php?debug=false&amp;lang=en&amp;modules=ext.smw.style%7Cext.smw.tooltip.styles&amp;only=styles&amp;skin=vector"/>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector"/>
<script async="" src="/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="generator" content="MediaWiki 1.27.4"/>
<link rel="alternate" media="only screen and (max-width: 720px)" href="https://m.wiki.mozilla.org/Security/CSP/Specification"/>
<link rel="alternate" type="application/rdf+xml" title="Security/CSP/Specification" href="/index.php?title=Special:ExportRDF/Security/CSP/Specification&amp;xmlmime=rdf"/>
<link rel="shortcut icon" href="/skins/common/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="MozillaWiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.mozilla.org/api.php?action=rsd"/>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Security_CSP_Specification rootpage-Security skin-vector action-view">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Security/CSP/Specification</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From MozillaWiki</div>
								<div id="contentSub"><span class="subpages">&lt; <a href="/Security" title="Security">Security</a>&lrm; | <a href="/Security/CSP" title="Security/CSP">CSP</a></span></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p>This specification document is DEPRECATED (old and crusty). The W3C has undertaken standardization of CSP and you can find the <a rel="nofollow" class="external text" href="http://www.w3.org/TR/CSP/">W3C spec here</a>.
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Specification"><span class="tocnumber">1</span> <span class="toctext">Specification</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Definitions"><span class="tocnumber">2</span> <span class="toctext">Definitions</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Policy_Language_and_Syntax"><span class="tocnumber">2.1</span> <span class="toctext">Policy Language and Syntax</span></a>
<ul>
<li class="toclevel-3 tocsection-4"><a href="#Sample_Policy_Definitions"><span class="tocnumber">2.1.1</span> <span class="toctext">Sample Policy Definitions</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="#Directives"><span class="tocnumber">2.1.2</span> <span class="toctext">Directives</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="#Source_Expression_List"><span class="tocnumber">2.1.3</span> <span class="toctext">Source Expression List</span></a>
<ul>
<li class="toclevel-4 tocsection-7"><a href="#Host-less_Schemes"><span class="tocnumber">2.1.3.1</span> <span class="toctext">Host-less Schemes</span></a></li>
<li class="toclevel-4 tocsection-8"><a href="#Port_Wildcards"><span class="tocnumber">2.1.3.2</span> <span class="toctext">Port Wildcards</span></a></li>
<li class="toclevel-4 tocsection-9"><a href="#Hostname_Wildcards"><span class="tocnumber">2.1.3.3</span> <span class="toctext">Hostname Wildcards</span></a></li>
<li class="toclevel-4 tocsection-10"><a href="#Source_Expression_Keywords"><span class="tocnumber">2.1.3.4</span> <span class="toctext">Source Expression Keywords</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-11"><a href="#Formal_Policy_Syntax"><span class="tocnumber">2.1.4</span> <span class="toctext">Formal Policy Syntax</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-12"><a href="#Violation_Report_Syntax"><span class="tocnumber">2.2</span> <span class="toctext">Violation Report Syntax</span></a>
<ul>
<li class="toclevel-3 tocsection-13"><a href="#Violation_Report_Sample"><span class="tocnumber">2.2.1</span> <span class="toctext">Violation Report Sample</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-14"><a href="#User_Agent_Behavior"><span class="tocnumber">3</span> <span class="toctext">User Agent Behavior</span></a>
<ul>
<li class="toclevel-2 tocsection-15"><a href="#Base_Restrictions"><span class="tocnumber">3.1</span> <span class="toctext">Base Restrictions</span></a>
<ul>
<li class="toclevel-3 tocsection-16"><a href="#No_inline_scripts_will_execute"><span class="tocnumber">3.1.1</span> <span class="toctext">No inline scripts will execute</span></a></li>
<li class="toclevel-3 tocsection-17"><a href="#Code_will_not_be_created_from_strings"><span class="tocnumber">3.1.2</span> <span class="toctext">Code will not be created from strings</span></a></li>
<li class="toclevel-3 tocsection-18"><a href="#No_data:_URIs_unless_opted-in_to_via_explicit_policy"><span class="tocnumber">3.1.3</span> <span class="toctext">No data: URIs unless opted-in to via explicit policy</span></a></li>
<li class="toclevel-3 tocsection-19"><a href="#XBL_bindings_must_come_from_chrome:_or_resource:_URIs"><span class="tocnumber">3.1.4</span> <span class="toctext">XBL bindings must come from chrome: or resource: URIs</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-20"><a href="#Restrictions_on_policy-uri_and_report-uri"><span class="tocnumber">3.2</span> <span class="toctext">Restrictions on policy-uri and report-uri</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#Activation_and_Enforcement"><span class="tocnumber">3.3</span> <span class="toctext">Activation and Enforcement</span></a></li>
<li class="toclevel-2 tocsection-22"><a href="#Policy_Refinements_with_Multiple_Headers"><span class="tocnumber">3.4</span> <span class="toctext">Policy Refinements with Multiple Headers</span></a>
<ul>
<li class="toclevel-3 tocsection-23"><a href="#Conflicting_report-uri_values"><span class="tocnumber">3.4.1</span> <span class="toctext">Conflicting report-uri values</span></a>
<ul>
<li class="toclevel-4 tocsection-24"><a href="#Data_Leak_Vectors"><span class="tocnumber">3.4.1.1</span> <span class="toctext">Data Leak Vectors</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-25"><a href="#Policy_Refinement_Procedure"><span class="tocnumber">3.4.2</span> <span class="toctext">Policy Refinement Procedure</span></a>
<ul>
<li class="toclevel-4 tocsection-26"><a href="#Making_a_Policy_Explicit"><span class="tocnumber">3.4.2.1</span> <span class="toctext">Making a Policy Explicit</span></a></li>
<li class="toclevel-4 tocsection-27"><a href="#Intersecting_Policies"><span class="tocnumber">3.4.2.2</span> <span class="toctext">Intersecting Policies</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2 tocsection-28"><a href="#Handling_Parse_Errors"><span class="tocnumber">3.5</span> <span class="toctext">Handling Parse Errors</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-29"><a href="#Non-Normative_Client-Side_Considerations"><span class="tocnumber">4</span> <span class="toctext">Non-Normative Client-Side Considerations</span></a>
<ul>
<li class="toclevel-2 tocsection-30"><a href="#Report-Only_mode"><span class="tocnumber">4.1</span> <span class="toctext">Report-Only mode</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-31"><a href="#HTTP_Server_Behavior"><span class="tocnumber">5</span> <span class="toctext">HTTP Server Behavior</span></a></li>
</ul>
</div>

<h1><span class="mw-headline" id="Specification">Specification</span></h1>
<p><a href="/Security/CSP" title="Security/CSP">Content Security Policy</a> is intended to help web designers or server administrators specify how content interacts on their web sites.  It helps mitigate and detect types of attacks such as XSS and data injection.  CSP is not intended to be a main line of defense, but rather one of the many layers of security that can be employed to help secure a web site.  More information about the intended use of CSP is available in the <a href="/Security/CSP#Goals" title="Security/CSP">goals</a> section of the overview document.
</p><p>The purpose of this document is to provide a detailed description of how Content Security Policy definitions can be deployed. It explains the syntax for creating a CSP policy definition and how the defined policies are received and enforced by a user agent.
</p>
<h1><span class="mw-headline" id="Definitions">Definitions</span></h1>
<p>A <b>policy</b> is composed of <b>directives</b>, such as "<tt>allow 'none'</tt>".  Each directive is composed of a <b>directive name</b> and a <b>directive value</b>, which is either a list of <b>host items</b> or a <b>URI</b>, for certain types of directives.
</p><p>When CSP is activated for a site, a few <b><a href="/Security/CSP#Content_Restrictions" title="Security/CSP">base restrictions</a></b> in the browser environment are enforced <i>by default</i> to help provide proper enforcement of any policy defined.  These base restrictions provide general security enhancements by limiting the types of dynamic content that is allowed: generally any script on a site that converts text into code (through the use of <tt>eval()</tt> or similar functions) is disallowed.  Details of the refinements can be found in the <a href="/Security/CSP/Specification#Base_Restrictions" title="Security/CSP/Specification">Base Restrictions</a> section.
</p>
<h2><span class="mw-headline" id="Policy_Language_and_Syntax">Policy Language and Syntax</span></h2>
<p>A policy is composed of directives with their corresponding values.  Any number of directives can be defined, but the <b><tt>allow</tt> directive must always be present</b>, or CSP will revert to enforcing the policy <tt>allow 'none'</tt> for the protected content.  Each directive is followed with a list of host expressions except for <tt>policy-uri</tt> and <tt>report-uri</tt> which contain a single URI value. Some <a href="/Security/CSP/Spec#Sample_Policy_Definitions" title="Security/CSP/Spec">example policy sets</a> are provided below.
</p><p>Note: In the case of policy refinements as described above, it is possible to have two report-uri values; in this situation, a copy of the report is sent to each of the two URIs.
</p><p><br />
</p>
<h3><span class="mw-headline" id="Sample_Policy_Definitions">Sample Policy Definitions</span></h3>
<p><b>Example 1:</b> Site wants all content to come from its own domain:
</p>
<pre>X-Content-Security-Policy: allow 'self'
</pre>
<p><b>Example 2:</b> Auction site wants to allow images from anywhere, plugin content from a list of trusted media providers (including a content distribution network), and scripts only from its server hosting sanitized JavaScript:
</p>
<pre>X-Content-Security-Policy: allow 'self'; img-src *; \
                           object-src media1.com media2.com *.cdn.com; \
                           script-src trustedscripts.example.com
</pre>
<p><b>Example 3:</b> Server administrators want to deny all third-party scripts for the site, and a given project group also wants to disallow media from other sites (header provided by sysadmins and header provided by project group are both present):
</p>
<pre>X-Content-Security-Policy: allow *; script-src 'self'
X-Content-Security-Policy: allow *; script-src 'self'; media-src 'self';
</pre>
<p><br />
<b>Example 4:</b> Online payments site wants to ensure that all of the content in its pages is loaded over SSL to prevent attackers from eavesdropping on requests for insecure content:
</p>
<pre>X-Content-Security-Policy: allow <a rel="nofollow" class="external free" href="https://*:443">https://*:443</a>
</pre>
<h3><span class="mw-headline" id="Directives">Directives</span></h3>
<dl><dt>allow</dt>
<dd></dd></dl>
<ul><li> The catch-all section that defines the security policy for all types of content which are not called out in any of the other directives.  Defines the default policy for un-specified content types, except for <tt>frame-ancestors</tt>, which MUST be enforced as "*" when not explicitly stated.</li>
<li> User Agents MUST NOT load content from any source if the allow directive is not explicitly specified. This can be considered equivalent to the policy "allow 'none'".</li>
<li> User Agents MUST enforce this directive for all HTTP requests not subject to one of the more specific directives.</li></ul>
<dl><dt>options</dt>
<dd></dd></dl>
<ul><li> Options for modifying the underlying behavior of CSP are specified here.</li>
<li> The value of this directive is a space-separated list of LDH tokens, each specifying a feature to enable or disable:
<ul><li> <tt>inline-script</tt> enables inline scripts and <tt>javascript:</tt> URIs</li>
<li> <tt>eval-script</tt> enables the <tt>eval()</tt> functionality of scripts interpreted by the browser, and allows code to be created from strings in uses of the <tt>new Function()</tt> constructor, <tt>setTimeout</tt> and <tt>setInterval</tt></li></ul></li>
<li> User Agents MUST ignore any tokens not recognized by CSP, and SHOULD post a non-fatal warning to the error console.</li></ul>
<dl><dt>img-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for images and favicons.</li>
<li> User Agents MUST NOT request images from non-approved sources.</li>
<li> User Agents MUST subject image requests to the allow directive if img-src is not explicitly specified. </li></ul>
<dl><dt>media-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for <tt>audio</tt> and <tt>video</tt> elements.</li>
<li> User Agents MUST NOT request <tt>audio</tt> and <tt>video</tt> elements from non-approved sources.</li>
<li> User Agents MUST subject audio and video requests to the allow directive if media-src is not explicitly specified.</li></ul>
<dl><dt>script-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for scripts.</li>
<li> Regulates which scripts can be loaded via the <tt>src=</tt> attribute.</li>
<li> User Agents MUST NOT request scripts from non-approved sources.</li>
<li> User Agents MUST subject script requests to the allow directive if script-src is not explicitly specified.</li></ul>
<dl><dt>object-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for <tt>object</tt>, <tt>embed</tt>, and <tt>applet</tt> elements.</li>
<li> User Agents MUST NOT request objects from non-approved sources.</li>
<li> User Agents MUST subject object, embed, and applet requests to the allow directive if object-src is not explicitly specified.</li></ul>
<dl><dt>frame-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for <tt>frame</tt> and <tt>iframe</tt> elements.</li>
<li> User Agents MUST NOT request frame content from non-approved sources.</li>
<li> User Agents MUST subject frame requests to the allow directive if frame-src is not explicitly specified.</li></ul>
<dl><dt>font-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for <tt>@font-src</tt> CSS loads.</li>
<li> User Agents MUST NOT request fonts served from non-approved sources when intended for use as a font in CSS.</li>
<li> User Agents MUST subject requests caused by <tt>@font-src</tt> to the allow directive if font-src is not explicitly specified.</li></ul>
<dl><dt>xhr-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for <tt>XMLHttpRequest</tt> connections.</li>
<li> User Agents MUST NOT cause XMLHttpRequests to open requests to sources not permitted by this directive.</li>
<li> User Agents MUST subject requests caused by <tt>XMLHttpRequest</tt> to the allow directive if xhr-src is not explicitly specified.</li></ul>
<dl><dt>frame-ancestors</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid <b>ancestors</b> for embedding the protected resource via <tt>object</tt>, <tt>frame</tt> and <tt>iframe</tt> tags.  An ancestor is any HTML document between the protected resource and the top of the window frame tree; for example, if A embeds B which embeds C, both A and B are <b>ancestors</b> of C.  If A embeds both B and C, B is <i>not</i> an ancestor of C, but A still <i>is</i>.</li>
<li> If this directive is not explicitly stated in the policy, it is assumed to be "*".  This is different than the other source directives that inherit the value of <tt>allow</tt>.</li>
<li> All web pages that are ancestors of the protected content must be indicated by the value of this directive.  For example, if A embeds B which embeds C, and C defines a <tt>frame-ancestors</tt> as "B,C" then C is not rendered as a subframe.</li>
<li> Answers the question: "Which sites may embed this resource?"</li>
<li> User Agents MUST NOT render the protected document when any of its frame ancestors are not allowed by this directive.</li>
<li> User Agents MUST always render the protected document if frame-ancestors is not explicitly specified.</li>
<li> Note that this directive addresses the <a rel="nofollow" class="external text" href="http://jeremiahgrossman.blogspot.com/2008/10/clickjacking-web-pages-can-see-and-hear.html">clickjacking</a> threat, but not <a rel="nofollow" class="external text" href="http://www.cgisecurity.com/articles/csrf-faq.shtml">CSRF</a>
<ul><li> Using frame-ancestors, it is possible to prevent a resource from being framed within a malicious webpage. The browser will stop loading the protected document as soon as its frame-ancestors policy is received and a policy violation is determined.</li>
<li> However, this directive <em>does not prevent the request for the document from being sent</em> to the framed document's server, as policy directives are received by the browser in the server's response.  To mitigate Cross-Site Request Forgery, the <a href="/Security/Sec-From" title="Security/Sec-From" class="mw-redirect">Sec-From header</a> provides a more robust mechanism.</li></ul></li></ul>
<dl><dt>style-src</dt>
<dd></dd></dl>
<ul><li> Indicates which sources are valid for externally linked stylesheets.</li>
<li> User Agents MUST always allow inline stylesheets and style attributes of HTML tags.</li>
<li> User Agents MUST NOT request stylesheets from sources not allowed by the style-src directive.</li>
<li> User Agents MUST subject stylesheet requests to the allow directive if style-src is not explicitly specified.</li></ul>
<dl><dt>report-uri</dt>
<dd></dd></dl>
<ul><li> Instructs the browser where to send a report when CSP is violated.</li>
<li> The report will be an JSON object with MIME type application/json sent via POST to the specified URI contained in the value of this directive.</li>
<li> Acceptable report URIs MUST use the scheme and port as the protected content, and the <a rel="nofollow" class="external text" href="http://publicsuffix.org">public suffix</a> and most general DNS label of the protected content and the report URI must match.  For example www.foo.co.uk and reports.foo.co.uk, but not reports.bar.co.uk.  Relative URIs are acceptable, and are resolved within the same scheme, host and port as the document served with the CSP.  </li>
<li> User Agents MUST send violation reports to any acceptable URIs in this directive.  Details about the information provided in violation reports are found in the <a href="#Violation_Report_Syntax">Violation Report Syntax</a> section.</li>
<li> User Agents MUST ignore report URIs that don't match the public suffix and base host match requirements.  User Agents SHOULD log one error to an error console.  User Agents MUST then continue CSP enforcement as if the report URI were not specified. </li>
<li> User Agents MUST NOT honor HTTP 3xx response codes to prevent HTTP header leakage across domains.</li></ul>
<dl><dt>policy-uri</dt>
<dd></dd></dl>
<ul><li> Indicates the location of a file containing the security policies for the protected resource.</li>
<li> <tt>policy-uri</tt> MUST only be defined in the absence of other policy definitions in the <tt>X-Content-Security-Policy</tt> HTTP header.  </li>
<li> User Agents MUST raise a <a href="/Security/CSP#Error_Handling" title="Security/CSP">fatal error</a> and MUST enforce the policy "allow 'none'" if <tt>policy-uri</tt> is defined among other directives in the header. </li>
<li> User Agents MUST ignore any policy URIs of a different origin (scheme, host, or port) from the protected content.  User Agents SHOULD resolve relative URIs within the same scheme, host and port as the protected document.</li></ul>
<h3><span class="mw-headline" id="Source_Expression_List">Source Expression List</span></h3>
<p>Source expressions are a combination of scheme and often host and port.  Source expressions may contain wildcards.  Examples of host-only source expressions are "<tt>*.mozilla.com</tt>" and "<tt>mozilla.org</tt>".  Internationalized domain names are specified according to their <a rel="nofollow" class="external text" href="http://tools.ietf.org/html/rfc3492">punycode representations</a>.
</p><p>Source expressions may also specify a scheme and/or port.  
If the scheme is not specified as part of the source expression, a User Agent MUST <i>use the same scheme as the protected document.</i>  
If a port is not specified as the source expression, a User Agent MUST use the default port for the source's scheme (whether it is inherited or explicitly specified in the source expression).
</p><p>When a scheme alone is the entire source expression (e.g., <tt>javascript:</tt>) a User Agent MUST NOT enforce host and port restrictions.  This is because for some schemes, host and port are irrelevant (e.g., <tt>data:</tt>).
</p>
<h4><span class="mw-headline" id="Host-less_Schemes">Host-less Schemes</span></h4>
<p>Valid sources do not always require a host.  Schemes such as <tt>data</tt> can be enabled as a source by stating the name of the scheme followed by a colon.  For example:
</p>
<dl><dt><tt>data:</tt></dt>
<dd> expresses support for all data URIs.</dd></dl>
<p><br />
</p>
<h4><span class="mw-headline" id="Port_Wildcards">Port Wildcards</span></h4>
<p>A wildcard "*" token may be used in place of the port number.  This indicates that all ports (except <a rel="nofollow" class="external text" href="http://www.mozilla.org/projects/netlib/PortBanning.html">banned ports</a>) are valid for the source.  Examples:
</p>
<dl><dt><tt>http://foo.com:*</tt></dt>
<dd> Any port may be used to access content from foo.com over http</dd>
<dt><tt>foo.com:*</tt></dt>
<dd> Any port may be used to access content from foo.com, over the same scheme as the CSP-protected resource</dd></dl>
<h4><span class="mw-headline" id="Hostname_Wildcards">Hostname Wildcards</span></h4>
<p>Each source expression's host name MAY contain up to one wildcard (*) and it MUST be the left-most DNS label.  
</p><p><i>Valid</i> wildcard host names expressions include "<tt>*.mozilla.com</tt>" and "<tt>*</tt>".  
</p><p><i>Invalid</i> wildcard host name expressions include "<tt>www.*.com</tt>", "<tt>*.mozilla.*</tt>" and "<tt>mozilla.*</tt>".  
</p><p>A wildcard token (*) matches <i>zero or more DNS labels</i>.  All of "<tt>d.c.b.a</tt>", "<tt>c.b.a</tt>", and "<tt>b.a</tt>" match the expression "<tt>*.b.a</tt>".
</p>
<h4><span class="mw-headline" id="Source_Expression_Keywords">Source Expression Keywords</span></h4>
<p>In place of source expressions, these keywords can be used to specify classes of sources.
</p>
<dl><dt> <tt>'none'</tt>&#160;</dt>
<dd> Refers to the empty set (no hosts are valid)</dd>
<dt> <tt>'self'</tt>&#160;</dt>
<dd> Refers to the source serving the protected content -- this is inclusive of scheme, host and port.</dd></dl>
<h3><span class="mw-headline" id="Formal_Policy_Syntax">Formal Policy Syntax</span></h3>
<pre>&lt;policy&gt;           &#160;::= &lt;allow-directive&gt;";"&lt;directive-list&gt;

&lt;allow-directive&gt;  &#160;::= allow &lt;src-dir-value&gt;

&lt;directive-list&gt;   &#160;::= &lt;empty&gt; | &lt;directive&gt;";"&lt;directive-list&gt;

&lt;directive&gt;        &#160;::= &lt;src-directive&gt;" "&lt;src-dir-value&gt;
                      | "options "&lt;options-dir-value&gt;
                      | &lt;uri-directive&gt;" "&lt;URI (<a class="external mw-magiclink-rfc" rel="nofollow" href="//tools.ietf.org/html/rfc2396">RFC 2396</a>)&gt;
                      | &lt;future-directive&gt;" "&lt;future-value&gt;

&lt;future-directive&gt; &#160;::= &lt;ldh-str&gt;

&lt;future-value&gt;     &#160;::= &lt;empty&gt;
                      | &lt;future-value&gt;&lt;fv-char&gt;

&lt;options-dir-value&gt;&#160;::= &lt;empty&gt;
                      | "eval-script" &lt;options-dir-value&gt;
                      | "inline-script" &lt;options-dir-value&gt;
                      | &lt;(unrecognized)ldh-str&gt; &lt;options-dir-value&gt;

&lt;src-directive&gt;    &#160;::= "img-src"
                      | "media-src"
                      | "style-src"
                      | "object-src"
                      | "frame-src"
                      | "font-src"
                      | "script-src"
                      | "xhr-src"
                      | "frame-ancestors"

&lt;uri-directive&gt;    &#160;::= "report-uri"
                      | "policy-uri"

&lt;src-dir-value&gt;    &#160;::= &lt;source-list&gt;
                      | "'none'"

&lt;source-list&gt;      &#160;::= &lt;source&gt;
                      | &lt;source-list&gt;" "&lt;source&gt;

&lt;source&gt;           &#160;::= "'self'"
                      | &lt;scheme&gt;&lt;host&gt;&lt;port&gt;
 
&lt;scheme&gt;           &#160;::= &lt;empty&gt;
                      | &lt;scheme-name&gt;":"
                      | &lt;scheme-name&gt;":/"
                      | &lt;scheme-name&gt;"://"

&lt;scheme-name&gt;      &#160;::= &lt;alpha&gt;&lt;scheme-suffix&gt;

&lt;host&gt;             &#160;::= &lt;empty&gt;
                      | &lt;host-name&gt;

&lt;host-name&gt;        &#160;::= "*" 
                      | &lt;ldh-str&gt;
                      | &lt;host-name&gt;"."&lt;ldh-str&gt;

&lt;port&gt;             &#160;::= &lt;empty&gt;
                      | ":*"
                      | ":"&lt;integer&gt;

&lt;scheme-suffix&gt;    &#160;::= &lt;scheme-chr&gt; 
                      | &lt;scheme-suffix&gt;&lt;scheme-chr&gt; 

&lt;ldh-str&gt;          &#160;::= &lt;let-dig-hyp&gt;
                      | &lt;ldh-str&gt;&lt;let-dig-hyp&gt;

&lt;let-dig-hyp&gt;      &#160;::= &lt;letter&gt; | &lt;digit&gt; | "-"

&lt;scheme-chr&gt;       &#160;::= &lt;letter&gt; | &lt;digit&gt; | "+" | "." | "-"

&lt;fv-char&gt;          &#160;::= &lt;letter&gt; | &lt;digit&gt; 
                       | " " | "+" | "." | "-" | "_"
                       | "'" | """ | "[" | "]" | "\" | "|"
                       | "/" | "?" | "{" | "}" | "=" | "+"
                       | "`" | "~" | "!" | "@" | "#" | "$"
                       | "%" | "^" | "&amp;" | "*" | "(" | ")"
                       
&lt;letter&gt;           &#160;::= "a"|"b"|"c"|"d"|"e"|"f"|"g"|"h"|"i"
                       |"j"|"k"|"l"|"m"|"n"|"o"|"p"|"q"|"r"
                       |"s"|"t"|"u"|"v"|"w"|"x"|"y"|"z" 
                       |"A"|"B"|"C"|"D"|"E"|"F"|"G"|"H"|"I"
                       |"J"|"K"|"L"|"M"|"N"|"O"|"P"|"Q"|"R"
                       |"S"|"T"|"U"|"V"|"W"|"X"|"Y"|"Z"

&lt;integer&gt;          &#160;::= &lt;digit&gt; | &lt;integer&gt;&lt;digit&gt; 

&lt;digit&gt;            &#160;::= "1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"|"0"

&lt;empty&gt;            &#160;::= ""
</pre>
<h2><span class="mw-headline" id="Violation_Report_Syntax">Violation Report Syntax</span></h2>
<p>User Agents MUST notify any provided report-uri when its containing policy is violated. These reports contain information about the protected resource and the violating content, and MUST be transmitted to any specified <tt>report-uri</tt>s via HTTP POST if available in the employed scheme, otherwise User Agents MUST choose an appropriate "submit" method.  
User Agents MUST NOT honor redirection responses.  
The report body MUST be a JSON object having the following properties:
</p>
<dl><dt> <tt>request</tt>&#160;</dt>
<dd> HTTP request line of the resource whose policy is violated (including method, resource, path, HTTP version)</dd>
<dt> <tt>request-headers</tt>&#160;</dt>
<dd> HTTP request headers sent with the request (above) for the CSP-Protected content</dd>
<dt> <tt>blocked-uri</tt>&#160;</dt>
<dd> URI of the resource that was blocked from loading due to a violation in policy</dd>
<dt> <tt>violated-directive</tt>&#160;</dt>
<dd> The policy section that was violated (e.g., "<tt>script-src *.mozilla.org</tt>").</dd>
<dt> <tt>original-policy</tt>&#160;</dt>
<dd> The original policy as served in the X-Content-Security-Policy HTTP header (or if there were multiple headers, a comma separated list of the policies)</dd></dl>
<p>NOTE: in the case where a protected resource is not rendered because the <tt>frame-ancestors</tt> directive was violated, User Agents MUST NOT send <tt>blocked-uri</tt> (it is assumed to be the same as the request URI).
</p><p>Violation Report JSON Format:
</p>
<pre>{
  csp-report: {
    request: "GET /index.html HTTP/1.1",
    request-headers: "Host: example.com
                      User-Agent: ...
                      ...",
    blocked-uri: "...",
    violated-directive: "..."
  }
}
</pre>
<p>The MIME type of the transmitted report will be set to <tt>application/json</tt>.
</p>
<h3><span class="mw-headline" id="Violation_Report_Sample">Violation Report Sample</span></h3>
<p>In this example, a page located at <tt><a rel="nofollow" class="external free" href="http://example.com/index.html">http://example.com/index.html</a></tt> was requested using HTTP 1.1 via the GET method.  It provided a policy that included the directive "<tt>img-src 'self'</tt>", which was violated by a request for <tt>http://evil.com/some_image.png</tt>.  The sample JSON object sent to the policy-specified <tt>report-uri</tt> follows.
</p>
<pre>{
  "csp-report":
    {
      "request": "GET <a rel="nofollow" class="external free" href="http://index.html">http://index.html</a> HTTP/1.1",
      "request-headers": "Host: example.com                                                        
                          User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.3a5pre) Gecko/20100601 Minefield/3.7a5pre                                                        
                          Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8  
                          Accept-Language: en-us,en;q=0.5                                          
                          Accept-Encoding: gzip,deflate                                            
                          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                           
                          Keep-Alive: 115                                                          
                          Connection: keep-alive",
      "blocked-uri": "http://evil.com/some_image.png",
      "violated-directive": "img-src 'self'",
      "original-policy": "allow 'none'; img-src *; allow 'self'; img-src 'self'"
    }
}
</pre>
<h1><span class="mw-headline" id="User_Agent_Behavior">User Agent Behavior</span></h1>
<h2><span class="mw-headline" id="Base_Restrictions">Base Restrictions</span></h2>
<p>The following restrictions will apply whenever any CSP directives are declared for a document:
</p>
<h3><span class="mw-headline" id="No_inline_scripts_will_execute">No inline scripts will execute</span></h3>
<p><font color="#a00">
</p>
<ul><li> User Agents MUST block:
<ul><li> The contents of internal &lt;script&gt; nodes</li>
<li> javascript: URIs, e.g. &lt;a href="javascript:bad_stuff()"&gt; (unless enabled by policy)</li>
<li> Event-handling attributes, e.g. &lt;a onclick="bad_stuff()"&gt;</li></ul></li></ul>
<p></font>
<font color="#060">
</p>
<ul><li> User Agents MUST NOT block:
<ul><li> Scripts imported from external files whose sources are allowed by the protected document's policy AND are served with a Content-Type of <tt>application/javascript</tt> or <tt>application/json</tt>.</li></ul></li></ul>
<p></font>
</p><p>User Agents MUST generate and send a violation report with the <tt>violated-directive</tt> value set to "Base Restriction Violation: no inline scripts will execute" when this base restriction is violated.
</p>
<h3><span class="mw-headline" id="Code_will_not_be_created_from_strings">Code will not be created from strings</span></h3>
<p><font color="#a00">
</p>
<ul><li> User Agents MUST block:
<ul><li> calls to eval()</li>
<li> calls to setTimeout using a String argument, e.g. setTimeout("evil string...", 1000)</li>
<li> calls to setInterval using a String argument, e.g. setInterval("evil string...", 1000)</li>
<li> calls to the Function constructor, e.g. var f = new Function("evil string...")</li></ul></li></ul>
<p></font>
<font color="#060">
</p>
<ul><li> User Agents MUST NOT block:
<ul><li> Functions declared using the function operator, e.g. function f() { some_code }, or var f = function() { some_code }</li>
<li> calls to setTimeout using a Function argument, e.g. setTimeout(myFunc, 1000)</li>
<li> calls to setInterval using a Function argument, e.g. setInterval(myFunc, 1000)</li></ul></li></ul>
<p></font>
</p><p>User Agents must generate and send a violation report with the <tt>violated-directive</tt> value set to "Base Restriction Violation: no code will be created with strings" when this base restriction is violated.
</p>
<h3><span class="mw-headline" id="No_data:_URIs_unless_opted-in_to_via_explicit_policy">No data: URIs unless opted-in to via explicit policy</span></h3>
<p><font color="#a00">
</p>
<ul><li> User Agents MUST block:
<ul><li> data: URIs when used as a source for inline content</li></ul></li></ul>
<p></font>
<font color="#060">
</p>
<ul><li> User Agents MUST NOT block:
<ul><li> data: URIs when used as a source for inline content explicitly allowed by the protected document's policy. </li></ul></li></ul>
<p></font>
</p><p>User Agents MUST generate and send a violation report with the fields set appropriately when this base restriction is violated.
</p>
<h3><span class="mw-headline" id="XBL_bindings_must_come_from_chrome:_or_resource:_URIs">XBL bindings must come from chrome: or resource: URIs</span></h3>
<p><i>NOTE: this is currently Firefox-Specific, but related behavior in other User Agents should also be limited.</i>
</p><p><font color="#a00">
</p>
<ul><li> User Agents MUST block:
<ul><li> XBL bindings loaded via any protocol other than chrome: or resource:</li></ul></li></ul>
<p></font>
<font color="#060">
</p>
<ul><li> User Agents MUST NOT block:
<ul><li> XBL bindings loaded via the chrome: or resource: protocols</li></ul></li></ul>
<p></font>
</p><p>User Agents MUST generate and send a violation report with the fields set appropriately when this base restriction is violated.
</p>
<h2><span class="mw-headline" id="Restrictions_on_policy-uri_and_report-uri">Restrictions on policy-uri and report-uri</span></h2>
<p>User Agents MUST raise a fatal error AND ignore any policy-uri that does not refer to the same origin (scheme/host/port) as the protected document OR that is not served with MIME type set to "text/x-content-security-policy".
</p><p>User Agents MUST raise a non-fatal warning AND ignore any report-uri directive values that refer to an origin not of the same public suffix AND base host.
(For instance, a report-uri in a policy for "www.mysite.com" may refer to anything that ends with "mysite.com".)
</p><p><font color="#a00">
</p>
<ul><li> User Agents MUST raise a fatal error AND revert to the policy "allow 'none'" when:
<ul><li> parsing a policy-uri directive value referring to a URI on a different host from the protected document.</li>
<li> receiving a policy-uri HTTP response served with Content-Type other than text/x-content-security-policy</li></ul></li>
<li> User Agents MUST raise a non-fatal warning AND ignore:
<ul><li> any report-uri directive values that refer to a URI on a different public suffix from the protected document</li>
<li> any report-uri directive values that refer to a base host than the protected document</li></ul></li></ul>
<p></font>
</p><p><i>Privacy Consideration:</i> The report sent to the report-uri contains potentially sensitive information, including cookie values and query string parameters. This information is intended only for the protected site for debugging purposes or similar. An attacker should not be allowed to steal the report information by injecting a report-uri, along with an arbitrary policy to be violated.
</p>
<h2><span class="mw-headline" id="Activation_and_Enforcement">Activation and Enforcement</span></h2>
<p>User Agents MUST activate CSP and enforce it for a document when the <tt>X-Content-Security-Policy</tt> HTTP header is provided in its HTTP response.  User Agents MUST parse AND begin enforcing the policy before any of the protected content is parsed.
</p>
<h2><span class="mw-headline" id="Policy_Refinements_with_Multiple_Headers">Policy Refinements with Multiple Headers</span></h2>
<p>When multiple instances of the <tt>X-Content-Security-Policy</tt> HTTP header are present in an HTTP response, the User Agent MUST enforce the intersection of the policies; essentially, the User Agent SHOULD enforce a policy that is more strict than both the policies specified in the multiple headers, but only strict enough to correspond to rules in all policies.  Any web request that satisfied <i>all</i> policies alone MUST be accepted by the new policy, but any request rejected by <i>any of</i> of the two policies MUST be rejected by the new policy.  
</p><p>User Agents MUST calculate the intersection on a directive-by-directive basis (i.e., the intersection of the <tt>allow</tt> directive is taken and enforced as the <tt>allow</tt> part of the effective policy). Explicitly, for two policies:
</p>
<blockquote>
<p>define R<sub>1</sub> &#8801; all URIs accepted by the first HTTP header CSP<br />
</p><p>define R<sub>2</sub> &#8801; all URIs accepted by the second HTTP header CSP<br />
</p><p><br />
R<sub>e</sub> = {r | r &#8712; R<sub>1</sub> AND r &#8712; R<sub>2</sub>}<br />
</p><p>(R<sub>e</sub> is the set of all URIs accepted by the intersected CSP)<br />
</p>
</blockquote>
<p>If more than two instances of the <tt>X-Content-Security-Policy</tt> header are present in the response, the User Agent MUST perform intersection digest-style: the first two policies are removed from the set of headers to digest, intersected, and the result is placed back in the set.  This continues until only one policy remains.  e.g.,
</p>
<pre>intersect(A, B, C, D) = intersect(A, intersect(B, intersect(C,D)))
</pre>
<p><i>Example: If two policy headers are present, one (P<sub>1</sub>) may allow scripts from domains A, B and C.  The policy in the other header (P<sub>2</sub>) may allow scripts from domains B, C and D.  The policy enforced (P<sub>enforced</sub>) by the browser will allow scripts from domains B and C only (P<sub>enforced</sub> = P<sub>1</sub> &#8745; P<sub>2</sub>).</i>
</p>
<h3><span class="mw-headline" id="Conflicting_report-uri_values">Conflicting <tt>report-uri</tt> values</span></h3>
<p>User Agents MUST send a single report to each URI when multiple headers define policies with different <tt>report-uri</tt> values
</p><p><i>Example: Report-duplication (or multiple reporting) is useful in the case where two different groups want to receive reports, but may not share access to the reports archive.  Take for instance a large web company that has a separate sysadmin staff (who are also in charge of security at some level) and project teams.  One project team may be interested in receiving reports about violations of their CSP, but are not interested in violations on other parts of the web site.  The sysadmin team wants to record all violations from all parts of the site into a massive archive.  The multiple reporting technique allows both entities to receive the reports they want without causing extra data-mining work on the part of the sysadmin team to isolate the reports that each project team may want.</i>
</p>
<h4><span class="mw-headline" id="Data_Leak_Vectors">Data Leak Vectors</span></h4>
<p>Since HTTP headers and the entire request string are sent in the report, it is possible that, in case of compromise, a violation report could leak private information to an arbitrary URI.  
</p><p>To avoid any possible cross-domain cookie or authentication token transfer, User Agents MUST only transmit reports to <i>the same origin (scheme, host, and port)</i> that served the protected content.
</p>
<h3><span class="mw-headline" id="Policy_Refinement_Procedure">Policy Refinement Procedure</span></h3>
<p>User Agents MUST resolve two headers present conflicting policies through the following process:
</p>
<ol><li> The policies are made explicit (see below)</li>
<li> They are intersected</li>
<li> The resulting policy is enforced.  </li></ol>
<p><a href="/File:CSP_Policy_Refinement_Overview.png" class="image" title="Policy Refinement Overview"><img alt="Policy Refinement Overview" src="/images/d/dd/CSP_Policy_Refinement_Overview.png" width="221" height="319" /></a>
</p><p>User Agents MUST follow this refinement procedure when there are multiple instances of the <tt>X-Content-Security-Policy</tt> HTTP header present in the HTTP response, or multiple policies are present in the HTTP header (separated by commas).
</p>
<h4><span class="mw-headline" id="Making_a_Policy_Explicit">Making a Policy Explicit</span></h4>
<p>The CSP policy language allows implicit values for directives through use of the "allow" (default) policy directive.  To make a policy explicit, the policy language is "expanded", or any missing directives are added with the value specified in the "allow" directive. This makes it easier to intersect policies and to enforce them, since all directives will have an explicit value.
</p><p><a href="/File:CSP_Policy_Explicification.png" class="image" title="Making a policy explicit"><img alt="Making a policy explicit" src="/images/5/56/CSP_Policy_Explicification.png" width="256" height="474" /></a>
</p>
<h4><span class="mw-headline" id="Intersecting_Policies">Intersecting Policies</span></h4>
<p>The core of combining two policies is essentially the creation of a <i>new policy where any valid request will also satisfy both original policies</i>.  In essence, if one HTTP request is allowed by both policies in question, it will be allowed by the refined policy.  If an HTTP request is <i>disallowed by either specified policy</i> it will be rejected by the refined policy.
</p><p><a href="/File:CSP_Policy_Intersect.png" class="image" title="Intersecting two explicit CSPs"><img alt="Intersecting two explicit CSPs" src="/images/f/ff/CSP_Policy_Intersect.png" width="355" height="365" /></a>
</p><p>In order to determine the intersection of two policies, the different directives are considered individually: for each directive in CSP, the values in both specified policies (A and B) are considered, and only those hosts allowed in both directive values are included in the intersection.
</p><p><br />
<a href="/File:CSP_Directive_Intersect.png" class="image" title="Intersecting two directives"><img alt="Intersecting two directives" src="/images/0/07/CSP_Directive_Intersect.png" width="373" height="387" /></a>
</p>
<h2><span class="mw-headline" id="Handling_Parse_Errors">Handling Parse Errors</span></h2>
<p>A number of different problems may be encountered while parsing the CSP policy.
These parse errors are not <em>policy violations</em>, and any error messages caused by parse errors are separate from the violation report sites may elect to receive when their site's <em>policies are violated</em>, via the report-uri directive.  
</p><p>User Agents SHOULD report parse errors locally in the user agent's error console.
</p>
<dl><dt>Unrecognized Directive</dt>
<dd> If an unrecognized directive (name not recognized) is encountered by a User Agent, the directive and its value are skipped (up to a semicolon or end of header, whichever is first) and the User Agent SHOULD report a warning message to the Error Console stating the unrecognized directive name.</dd></dl>
<dl><dt>Unrecognized <tt>options</tt> token</dt>
<dd> If an unrecognized token is present in the <tt>options</tt> directive value, the User Agent MUST ignore it and SHOULD report a warning message to the Error Console stating the unrecognized token.</dd></dl>
<dl><dt>Missing "allow"</dt>
<dd> If the "allow" directive is not present, the User Agent SHOULD report a warning message to the Error Console and MUST assume the directive value "allow 'none'" for the policy.  The User Agent MUST enforce the rest of the policy as written (assuming no other policy errors are encountered).  </dd></dl>
<dl><dt>Directive Syntax Error</dt>
<dd> When any known directive contains a value that violates <a href="/Security/CSP/Spec#Policy_Language_and_Syntax" title="Security/CSP/Spec">CSP syntax</a>, the User Agent SHOULD report a warning message stating the invalid syntax to the Error Console AND MUST "fail closed" by enforcing the most secure policy, "allow 'none'" for the protected document.</dd></dl>
<dl><dt>No Recognized Directives</dt>
<dd> If no recognized directives are present in the stated policy, the User Agent SHOULD report a warning message to the Error Console stating "invalid policy" AND MUST enforce the policy "allow 'none'" on the protected document.</dd></dl>
<dl><dt>Other Parsing Errors</dt>
<dd> Any other parsing errors not covered here SHOULD cause the User Agent to enforce the policy "allow 'none'".  If such a case should arise, the User Agent SHOULD report a descriptive error to the Error Console describing the problem.</dd></dl>
<h1><span class="mw-headline" id="Non-Normative_Client-Side_Considerations">Non-Normative Client-Side Considerations</span></h1>
<dl><dt> User Scripts&#160;</dt>
<dd> CSP should not interfere with the operation of user-supplied scripts (such as browser add-ons and bookmarklets).</dd></dl>
<dl><dt> Redirects to Content&#160;</dt>
<dd> When a resource is requested from a URI <i>X[0]</i> protected by a policy <i>CSP</i>, that resource's URI is only loaded if permitted by <i>CSP</i>.  If the URI <i>X[0]</i> resolves to an HTTP redirect of any kind (temporary or permanent) the new URI <i>X[1]</i> is also required to be permitted by the policy <i>CSP</i>.  The effect is that all requests generated by the document must be permitted by the CSP whether they are the initial request or the steps taken during a redirect.</dd></dl>
<dl><dt> Future Directives&#160;</dt>
<dd> In order to support future directives (or new versions of this spec), CSP must parse but ignore directives with unknown names. When an unknown directive is encountered by the UA, a warning is posted to the error console, and the directive is ignored.</dd></dl>
<h2><span class="mw-headline" id="Report-Only_mode">Report-Only mode</span></h2>
<p>To ease deployment, CSP can be deployed in "report-only" mode where a policy served is not enforced, but any violations are reported to a provided URI.  The effect is a "what if" scenario where a site can specify a policy and measure how much breaks.  Additionally, a report-only header can be used to test a future revision to a policy without actually deploying it.
</p><p>Report-only mode is enabled by specifying a policy in the <tt>X-Content-Security-Policy-Report-Only</tt> header instead of the <tt>X-Content-Security-Policy</tt> header.  
</p><p>If both a <tt>X-Content-Security-Policy-Report-Only</tt> header and a <tt>X-Content-Security-Policy</tt> header are present in the same response, both policies are honored.  The policy specified in <tt>X-Content-Security-Policy</tt> headers is enforced.  All loads/scripts are compared the one specified in the <tt>X-Content-Security-Policy-Report-Only</tt> header, and any violations generate reports but are not enforced.
</p>
<h1><span class="mw-headline" id="HTTP_Server_Behavior">HTTP Server Behavior</span></h1>
<dl><dt>HTTP Header Placement</dt>
<dd></dd></dl>
<p>The <tt>X-Content-Security-Policy</tt> HTTP Response header MAY be present in the <a rel="nofollow" class="external text" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2">Message Headers</a> section of a server's HTTP response.  Specifically, it MUST NOT appear in the <a rel="nofollow" class="external text" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.40">Trailer Headers</a> section of the response, so that the policy may be enforced as the rest of the page content loads.  Multiple <tt>X-Content-Security-Policy</tt> Response headers MAY be inserted.
</p>
<!-- 
NewPP limit report
Cached time: 20181030214049
Cache expiry: 86400
Dynamic content: false
[SMW] In‐text annotation parser time: 0.011 seconds
CPU time usage: 0.088 seconds
Real time usage: 0.340 seconds
Preprocessor visited node count: 159/1000000
Preprocessor generated node count: 206/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 - -total
-->

<!-- Saved in parser cache with key wiki:pcache:idhash:34077-0!*!0!!en!5!* and timestamp 20181030214049 and revision id 476897
 -->
</div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://wiki.mozilla.org/index.php?title=Security/CSP/Specification&amp;oldid=476897">https://wiki.mozilla.org/index.php?title=Security/CSP/Specification&amp;oldid=476897</a>"					</div>
				<div id="catlinks" class="catlinks catlinks-allhidden" data-mw="interface"></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Security%2FCSP%2FSpecification" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li><li id="pt-createaccount"><a href="/Special:RequestAccount" title="You are encouraged to create an account and log in; however, it is not mandatory">Request account</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/Security/CSP/Specification"  title="View the content page [c]" accesskey="c">Page</a></span></li>
															<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Security/CSP/Specification&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Discussion</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/Security/CSP/Specification" >Read</a></span></li>
															<li id="ca-viewsource"><span><a href="/index.php?title=Security/CSP/Specification&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Security/CSP/Specification&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search" title="Search MozillaWiki [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-Product-releases"><a href="/Releases">Product releases</a></li><li id="n-newpages"><a href="/Special:NewPages">New pages</a></li><li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-Recent-uploads"><a href="/Special:NewFiles">Recent uploads</a></li><li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li><li id="n-Help"><a href="/MozillaWiki:Help">Help</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-How_to_Contribute' aria-labelledby='p-How_to_Contribute-label'>
			<h3 id='p-How_to_Contribute-label'>How to Contribute</h3>

			<div class="body">
									<ul>
						<li id="n-All-hands-meeting"><a href="/WeeklyUpdates">All-hands meeting</a></li><li id="n-Other-meetings"><a href="/Community_Calendar">Other meetings</a></li><li id="n-Contribute-to-Mozilla"><a href="/Contribute">Contribute to Mozilla</a></li><li id="n-Mozilla-Reps"><a href="/ReMo">Mozilla Reps</a></li><li id="n-Student-Ambassadors"><a href="/StudentAmbassadors">Student Ambassadors</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-MozillaWiki' aria-labelledby='p-MozillaWiki-label'>
			<h3 id='p-MozillaWiki-label'>MozillaWiki</h3>

			<div class="body">
									<ul>
						<li id="n-News"><a href="/MozillaWiki:News">News</a></li><li id="n-About"><a href="/MozillaWiki:About">About</a></li><li id="n-Team"><a href="/MozillaWiki:Team">Team</a></li><li id="n-Policies"><a href="/MozillaWiki:Policies">Policies</a></li><li id="n-Releases"><a href="/MozillaWiki:Releases">Releases</a></li><li id="n-.40MozillaWiki"><a href="//twitter.com/MozillaWiki" rel="nofollow">@MozillaWiki</a></li><li id="n-Report-a-wiki-bug"><a href="//bugzilla.mozilla.org/enter_bug.cgi?product=Websites&amp;component=wiki.mozilla.org" rel="nofollow">Report a wiki bug</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-Around_Mozilla' aria-labelledby='p-Around_Mozilla-label'>
			<h3 id='p-Around_Mozilla-label'>Around Mozilla</h3>

			<div class="body">
									<ul>
						<li id="n-Mozilla-Support"><a href="//support.mozilla.org/" rel="nofollow">Mozilla Support</a></li><li id="n-Mozilla-Developer-Network"><a href="//developer.mozilla.org/" rel="nofollow">Mozilla Developer Network</a></li><li id="n-Planet-Mozilla"><a href="//planet.mozilla.org/" rel="nofollow">Planet Mozilla</a></li><li id="n-Mozilla-Blog"><a href="//blog.mozilla.org/" rel="nofollow">Mozilla Blog</a></li><li id="n-Webmaker"><a href="//webmaker.org/" rel="nofollow">Webmaker</a></li><li id="n-Research"><a href="//www.mozilla.org/research/" rel="nofollow">Research</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Security/CSP/Specification" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Security/CSP/Specification" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print"><a href="/index.php?title=Security/CSP/Specification&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink"><a href="/index.php?title=Security/CSP/Specification&amp;oldid=476897" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/index.php?title=Security/CSP/Specification&amp;action=info" title="More information about this page">Page information</a></li><li id="t-importfrometherpadlink"><a href="/Special:ImportFromEtherpad" rel="importfrometherpad-link">Import an Etherpad</a></li><li id="t-smwbrowselink"><a href="/Special:Browse/:Security-2FCSP-2FSpecification" rel="search">Browse properties</a></li>					</ul>
							</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 5 October 2012, at 17:30.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/MozillaWiki:Privacy_policy" title="MozillaWiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/MozillaWiki:About" title="MozillaWiki:About">About MozillaWiki</a></li>
											<li id="footer-places-mobileview"><a href="https://m.wiki.mozilla.org/index.php?title=Security/CSP/Specification&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a><a href="https://www.semantic-mediawiki.org/wiki/Semantic_MediaWiki"><img src="/extensions/SemanticMediaWiki/includes/../res/images/smw_button.png" alt="Powered by Semantic MediaWiki" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.loader.state({"user":"ready","user.groups":"ready"});mw.loader.load(["ext.smw.tooltips","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.ImportFromEtherpad.main.init"]);});</script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35433268-22', 'auto');
  ga('set', 'anonymizeIp', true);
  ga('send', 'pageview');

</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":206});});</script>
	<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"d656aeec33","applicationID":"43461061","transactionName":"NAFXZ0VQD0VVARUIVg1LdFBDWA5YGwMCFVAMChpFXlQW","queueTime":0,"applicationTime":225,"atts":"GEZUEQ1KHEs=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
